=====Pull Request 模式=====

Pull requests are a feature that makes it easier for developers to collaborate using Bitbucket. They provide a user-friendly web interface for discussing proposed changes before integrating them into the official project.

<fc #008B00>大部分git托管服务都提供pull requests功能，这让协同开发变得轻松了。它可以在向官方仓库集成新功能前，提供界面友好的交互讨论和代码评审。</fc>

Git Workflows: Pull Request in Bitbucket

In their simplest form, pull requests are a mechanism for a developer to notify team members that they have completed a feature. Once their feature branch is ready, the developer files a pull request via their Bitbucket account. This lets everybody involved know that they need to review the code and merge it into the master branch.

<fc #008B00>最简单的形式，某个开发者完成任务后，pull requests 帮助开发者提醒团队成员。某个功能在分支上开发完成，开发者发起一个pull reques ，这让团队成员知道他们要评审一下代码，然后决定是否把新功能合并进入主干分支了。</fc>

But, the pull request is more than just a notification—it’s a dedicated forum for discussing the proposed feature. If there are any problems with the changes, teammates can post feedback in the pull request and even tweak the feature by pushing follow-up commits. All of this activity is tracked directly inside of the pull request.

<fc #008B00>pull request 不仅可以通知，而且是个论坛，专门讨论变更，如果对变更有意见，团队成员就贴上看法。甚至直接提交自己的代码，调整变更。所有的活动在pull request里都一目了然。</fc>

Git Workflows: Activity inside a pull request

Compared to other collaboration models, this formal solution for sharing commits makes for a much more streamlined workflow. SVN and Git can both automatically send notification emails with a simple script; however, when it comes to discussing changes, developers typically have to rely on email threads. This can become haphazard, especially when follow-up commits are involved. Pull requests put all of this functionality into a friendly web interface right next to your Bitbucket repositories.


====Pull Request描述====

When you file a pull request, all you’re doing is requesting that another developer (e.g., the project maintainer) pulls a branch from your repository into his repository. This means that you need to provide 4 pieces of information to file a pull request: the source repository, the source branch, the destination repository, and the destination branch.

<fc #008B00>当你发起pull request，你所做的事情就是请求其他开发者（比如，官方项目管理人员等）在他的本地合并你的分支上的变更进入他的仓库主干。这意味着发起一次pull request 需要4份信息：源仓库，源分支，目标仓库，目标分支。</fc>

Git Workflows: Pull Requests

Many of these values will be set to a sensible default by Bitbucket. However, depending on your collaboration workflow, your team may need to specify different values. The above diagram shows a pull request that asks to merge a feature branch into the official master branch, but there are many other ways to use pull requests.

<fc #008B00>在Bitbucket里，很多值都出事设置了，依据你协作流程，团队值需声明特殊的值。上图显示了 pull request 要求合并一个任务分支到官方主干分支，当然，还有很多种使用pull request的方法。</fc>
-----
=====流程描述=====

Pull requests can be used in conjunction with the Feature Branch Workflow, the Gitflow Workflow, or the Forking Workflow. But a pull request requires either two distinct branches or two distinct repositories, so they will not work with the Centralized Workflow. Using pull requests with each of these workflows is slightly different, but the general process is as follows:

<fc #008B00> Pull requests 都被用在任务分支模式、Gitflow分支模式、复刻分支模式中。 一个 pull request 需要两个不同的而非那只，或者两个不同的仓库，所有只有中央集中分支模式没有pull request 功能。 在这些分支模式中，pull request 使用的方法都有些区别，通用的流程如下： \\

1)一个开发者在本地仓库创建一个任务分支,用来完成某个任务\\

2)开发者提交分支到公开git托管库 \\

3 开发者发起pull request \\

4 团队评审代码，讨论，交互 \\

5 项目管理人员合并变更代码进入官方项目仓库，然后关闭 pull request \\

下面描述在不同的分支模式中，pull requests 如何最大化他们的功能。\\

</fc>



1) A developer creates the feature in a dedicated branch in their local repo.

2) The developer pushes the branch to a public Bitbucket repository.

3) The developer files a pull request via Bitbucket.

4) The rest of the team reviews the code, discusses it, and alters it.

5) The project maintainer merges the feature into the official repository and closes the pull request. 

The rest of this section describes how pull requests can be leveraged against different collaboration workflows.


==== 任务分支模式中的使用Pull Requests====

The Feature Branch Workflow uses a shared Bitbucket repository for managing collaboration, and developers create features in isolated branches. But, instead of immediately merging them into master, developers should open a pull request to initiate a discussion around the feature before it gets integrated into the main codebase.

<fc #008B00>任务分支模式中，有一个公共仓库来管理协作开发，开发者在各自孤立的分支上完成变更。 完成后并不能直接合并入主干，开发者需要发起一个pull request 来 进行讨论需求，评审代码，然后再决定是否合并入主干基线代码。</fc>

Pull Request: Feature Branch workflow

There is only one public repository in the Feature Branch Workflow, so the pull request’s destination repository and the source repository will always be the same. Typically, the developer will specify their feature branch as the source branch and the master branch as the destination branch.

<fc #008B00>在任务分支模式中，只有一个共享中央库，所以pull requests 的源仓库和目标仓库都是同一个。典型情况下，开发者声明他们的任务分支作为源分支，主干分支作为目标分支。</fc>

After receiving the pull request, the project maintainer has to decide what to do. If the feature is ready to go, they can simply merge it into master and close the pull request. But, if there are problems with the proposed changes, they can post feedback in the pull request. Follow-up commits will show up right next to the relevant comments.

<fc #008B00>收到pull request 后，项目管理人员立即展开工作。 如果任务分支已经完成，且成熟。他们只是简单地合并入进主干并关闭pull request，如果对于变革有意见，可能需要在pull request里贴出意见。后续提交将展示这些意见。</fc>

It’s also possible to file a pull request for a feature that is incomplete. For example, if a developer is having trouble implementing a particular requirement, they can file a pull request containing their work-in-progress. Other developers can then provide suggestions inside of the pull request, or even fix the problem themselves with additional commits.

<fc #008B00>任务没有完成也可以发发起pull request。比如，一个开发者在实现一个特殊的需求时遇到了麻烦，就可以发起一个包含当前工作进度的pull request 。其他的工程师可以在pull request里提供建议，或者直接修改代码并提交。</fc>
====Gitflow分支模式中使用Pull Requests====

The Gitflow Workflow is similar to the Feature Branch Workflow, but defines a strict branching model designed around the project release. Adding pull requests to the Gitflow Workflow gives developers a convenient place to talk about a release branch or a maintenance branch while they’re working on it.

Gitflow分支模式和任务分支模式相似，gitflow围绕着项目发布定义了一些列严格用途的分支。 在Gitflow中使用pull request 给开发者在发布分支或者维护分支工作事，方便地讨论或者评审代码。

Pull Requests: Gitflow Workflow

The mechanics of pull requests in the Gitflow Workflow are the exact same as the previous section: a developer simply files a pull request when a feature, release, or hotfix branch needs to be reviewed, and the rest of the team will be notified via Bitbucket.

Gitflow中pull requests的用法和任务分支模式的用法一样。开发者在需求、任务、发布、补丁等分支需要评审的时候，就发起一个。团队成员可以收到通知。

Features are generally merged into the develop branch, while release and hotfix branches are merged into both develop and master. Pull requests can be used to formally manage all of these merges.


====复刻分支模式中使用 Pull Requests====

In the Forking Workflow, a developer pushes a completed feature to their own public repository instead of a shared one. After that, they file a pull request to let the project maintainer know that it’s ready for review.

复刻模式分支模式中，开发者完成开发后把代码从私有库提交到自己的公开库，不想其他模式提交到公有仓库。然后，发起一个pull request 让项目维护者知道自己的代码写完了，可以先看看。

The notification aspect of pull requests is particularly useful in this workflow because the project maintainer has no way of knowing when another developer has added commits to their Bitbucket repository.

在这种模式中，pull request 发出的通知特别有用，让项目维护者知道谁修改什么。

Pull Requests: Forking workflow

Since each developer has their own public repository, the pull request’s source repository will differ from its destination repository. The source repository is the developer’s public repository and the source branch is the one that contains the proposed changes. If the developer is trying to merge the feature into the main codebase, then the destination repository is the official project and the destination branch is master.

因为每个开发者有自己的公开库，pull request的源码库不同于它的目标库。源码库是开发者的公开库，源分支包含了作者的变更。如果开发者试图合并功能进入主基线，目标仓库是官方项目，目标分支是主干。

Pull requests can also be used to collaborate with other developers outside of the official project. For example, if a developer was working on a feature with a teammate, they could file a pull request using the teammate’s Bitbucket repository for the destination instead of the official project. They would then use the same feature branch for the source and destination branches.

Pull requests 也是官方项目和其他开发者之间的沟通工具。如果开发者同其他人一起修改变更，他们可以在其他git托管的公开仓库上发起一个pull request 来讨论问题，无需在官方项目上。
Pull Requests: Forking workflow

The two developers could discuss and develop the feature inside of the pull request. When they’re done, one of them would file another pull request asking to merge the feature into the official master branch. This kind of flexibility makes pull requests very powerful collaboration tool in the Forking workflow.
------
