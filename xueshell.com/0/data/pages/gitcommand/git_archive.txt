====源码发布====

就我的项目而言，Git完全跟踪了我想打包并发布给用户的文件。创建一个源码包，我运 行：
<code bash>
$ git archive --format=tar --prefix=proj-1.2.3/ HEAD
</code>
==== 输出最后一次提交的改变 ====

这个命令，我经常使用它 来发送其他没有使用git的人来检查或者集成所修改的。它会输出最近提交的修改类容到一个zip文件中。

<code bash >
	git archive -o ../updated.zip HEAD $(git diff --name-only HEAD^)
</code>
 
==== 输出两个提交间的改变 ====

类似的，如果你需要输出某两个提交间的改变时，你可以使用这个。
<code bash>
	git archive -o ../latest.zip NEW_COMMIT_ID_HERE $(git diff--name-only OLD_COMMIT_ID_HERE NEW_COMMIT_ID_HERE)
</code>