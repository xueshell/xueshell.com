====shell如何获取后天运行的子进程的退出状态====


一个命令的执行成功与否（即退出值）可以通过echo $?来获得，然而把命令放到后台执行后，如何获取命令的退出值？

for example：
ls -l my & #my不存在的

正常的执行ls -l my后
再echo $?得到2

但ls -l my &后echo $?得到0

怎么去获得命令的真正的退出状态


放到后台去执行，前台已经不管其执行情况了，返回的仅仅是放入后台这个操作成功与否而非命令本身，那肯定都是成功的。
后台获取ls -l 命令的执行情况，可以考虑将错误输出流（2）导入标准输出（1）获取命令打印结果加以判断。如：
<code bash>

ret=`ls -l my 2>&1 &`
# 如果是用脚本执行的话，需要在这里判断进程是否存在，等待命令执行完；或者sleep足够长的时间
echo $ret | grep "No such file or directory" >/dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "Failed"
else
    echo "Successful"
fi
</code>
 
或者也可以考虑写文件的方式，若后台命令执行发生错误，写错误日志，判断存在错误日志且大小不为0，就能知道命令执行发生错误了。这样做的好处是，不涉及具体错误信息的判断。
<code>
errlog=/tmp/err.log

size=0

ls -l my 2>$errlog &
</code>

<code bash>
# 如果是用脚本执行的话，需要在这里判断进程是否存在，等待命令执行完；或者sleep足够长的时间
[ -f $errlog ] && size=`wc -c $errlog | cut -d' ' -f1`
if [ $size -gt 0 ]; then
    echo "Failed"
else
    echo "Successful"
fi
</code>
追问

恩，这样是可以的，但我想知道后台进程的确切的exit code呢，如何捕获？比方说，ls -l my 用echo $?得到的值为2，但ls -l my &后echo $?得到的值是0，但其实是2，我怎么才能获取真正的退出值2呢？

回答

一块儿放到后台去：
ls -l my; echo $? &

追问

那如果是远程执行命令呢？比方说 ssh host "ls -l my" &,怎么获取远程执行的这条命令的退出状态值呢？

回答

后台执行命令，结果就在后台；远程执行命令，结果就在远程设备端。就看你怎样取到前台和本地来。
自己想想喏~~
我还是建议用我上面的存文件方法，便于分析失败原因，只有一个状态码往往是不够的。

追问

状态值是子进程返回给调用它的父进程的，远程执行，父进程在本地，子进程在远程设备上，那这个状态码应该会被ssh返回给本地的吧，那我们还是能够获取的呀。比方说，ssh localhost "ls -l my"后echo $?得到2，说明状态码返回过来了

回答

既然这样，那不还是一样的嘛。一块儿放到后台去：
ssh host "ls -l my"; echo $? &

提问者评价

    谢谢你的耐心解答，好详细呀

