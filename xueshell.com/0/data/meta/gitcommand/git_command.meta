a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1386730150;s:8:"modified";i:1395138668;}s:7:"creator";s:5:"lixin";s:4:"user";s:5:"uahoo";s:11:"last_change";b:0;s:11:"contributor";a:1:{s:5:"uahoo";s:5:"lixin";}s:5:"title";s:33:"个人开发者（单独开发）";s:11:"description";a:2:{s:15:"tableofcontents";a:4:{i:0;a:4:{s:3:"hid";s:28:"个人开发者_单独开发";s:5:"title";s:33:"个人开发者（单独开发）";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:1;a:4:{s:3:"hid";s:28:"个人开发者_参与开发";s:5:"title";s:33:"个人开发者（参与开发）";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:12:"集成人员";s:5:"title";s:12:"集成人员";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:15:"代码库管理";s:5:"title";s:15:"代码库管理";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:861:"个人开发者（单独开发）

单独的个人开发者不会与他人交换修补程序，只用到下列命令，独自在单独的代码库上工作：

	*   git-init(1) 用来创建新代码库。 
	*  git-show-branch(1)用来查看你在哪里。 
	* git-add(1)用来管理索引文件。
	*  git-checkout(1)和git-branch(1)用来切换分支。
	*  git-diff(1)和git-status(1)查看你正在做什么。 
	*  git-log(1)查看发生过什么。
	*  git-commit(1)将内容推进现分支 
	*  git-cat-file(1) 和 git-show (1) 查看仓库对象内容和文件内容。
	*  git-reset(1)和git-checkout(1)（带路径名 参数）放弃修改。 
	*  git-tag(1)用来给已知点打标签 
	*  git-clean(1) 清除工作目录未加入缓存的文件
	*  git-rev-parse(1) 查询对象的SHA值
	*  git-stash(1) 保存未提交变更，清除工作目录…";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1386730150;s:8:"modified";i:1395138668;}s:7:"creator";s:5:"lixin";s:4:"user";s:5:"uahoo";s:11:"last_change";b:0;s:11:"contributor";a:1:{s:5:"uahoo";s:5:"lixin";}}}