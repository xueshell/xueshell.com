a:157:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:"awk 用法：awk ' pattern {action} ' ";}i:2;i:2;}i:3;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:40;}i:4;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:40;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:309:"变量名 含义
ARGC 命令行变元个数
ARGV 命令行变元数组
FILENAME 当前输入文件名
FNR 当前文件中的记录号
FS 输入域分隔符，默认为一个空格
RS 输入记录分隔符
NF 当前记录里域个数
NR 到目前为止记录数
OFS 输出域分隔符
ORS 输出记录分隔符";}i:2;i:42;}i:6;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:351;}i:7;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:351;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:"1、awk '/101/'               file 显示文件file中包含101的匹配行。";}i:2;i:353;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:431;}i:10;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:185:" awk '/101/,/105/'         file
 awk '$1 == 5'             file
 awk '$1 == "CT"'          file 注意必须带双引号
 awk '$1 * $2 >100 '       file 
 awk '$2 >5 && $2<=15'     file";}i:2;i:431;}i:11;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:431;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:125:"2、awk '{print NR,NF,$1,$NF,}' file 显示文件file的当前记录号、域数和每一行的第一个和最后一个域。";}i:2;i:630;}i:13;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:755;}i:14;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:250:" awk '/101/ {print $1,$2 + 10}' file 显示文件file的匹配行的第一、二个域加10。
 awk '/101/ {print $1$2}'  file
 awk '/101/ {print $1 $2}' file 显示文件file的匹配行的第一、二个域，但显示时域中间没有分隔符。";}i:2;i:755;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:755;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:108:"3、df | awk '$4>1000000 '         通过管道符获得输入，如：显示第4个域满足条件的行。";}i:2;i:1015;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1123;}i:18;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1123;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"4、awk -F ";}i:2;i:1126;}i:20;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1137;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"|";}i:2;i:1138;}i:22;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1139;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" '{print $1}'   file 按照新的分隔符“|”进行操作。";}i:2;i:1140;}i:24;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1204;}i:25;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:129:" awk  'BEGIN { FS="[: \t|]" }
 {print $1,$2,$3}'       file 通过设置输入分隔符（FS="[: \t|]"）修改输入分隔符。";}i:2;i:1204;}i:26;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:326:" Sep="|"
 awk -F $Sep '{print $1}'  file 按照环境变量Sep的值做为分隔符。   
 awk -F '[ :\t|]' '{print $1}' file 按照正则表达式的值做为分隔符，这里代表空格、:、TAB、|同时做为分隔符。
 awk -F '[][]'    '{print $1}' file 按照正则表达式的值做为分隔符，这里代表[、]";}i:2;i:1339;}i:27;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1339;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"5、awk -f awkfile       file 通过文件awkfile的内容依次进行控制。";}i:2;i:1677;}i:29;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1756;}i:30;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:12:" cat awkfile";}i:2;i:1756;}i:31;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1756;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"/101/{print ";}i:2;i:1772;}i:33;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1784;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"\047 Hello! \047";}i:2;i:1785;}i:35;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1801;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"} ";}i:2;i:1802;}i:37;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:1804;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:94:"遇到匹配行以后打印 ' Hello! '.\047代表单引号。
{print $1,$2}                   ";}i:2;i:1806;}i:39;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:1900;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:"因为没有模式控制，打印每一行的前两个域。";}i:2;i:1902;}i:41;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1962;}i:42;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1962;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:94:"6、awk '$1 ~ /101/ {print $1}' file 显示文件中第一个域匹配101的行（记录）。";}i:2;i:1965;}i:44;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2059;}i:45;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2059;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"7、awk   'BEGIN { OFS=";}i:2;i:2062;}i:47;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2085;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"%";}i:2;i:2086;}i:49;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2087;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"}";}i:2;i:2088;}i:51;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2089;}i:52;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:92:" {print $1,$2}'           file 通过设置输出分隔符（OFS="%"）修改输出格式。";}i:2;i:2089;}i:53;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2089;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"8、awk   'BEGIN { max=100 ;print ";}i:2;i:2187;}i:55;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2221;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"max=";}i:2;i:2222;}i:57;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2226;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:" max}             BEGIN 表示在处理任意行之前进行的操作。";}i:2;i:2227;}i:59;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2299;}i:60;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:252:" {max=($1 >max ?$1:max); print $1,"Now max is "max}' file 取得文件第一个域的最大值。
 （表达式1?表达式2:表达式3 相当于：
 if (表达式1)
     表达式2
 else
     表达式3
 awk '{print ($1>4 ? "high "$1: "low "$1)}' file ";}i:2;i:2299;}i:61;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2299;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:96:"9、awk '$1 * $2 >100 {print $1}' file 显示文件中第一个域匹配101的行（记录）。";}i:2;i:2569;}i:63;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2665;}i:64;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2665;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:124:"10、awk '{$1 == 'Chi' {$3 = 'China'; print}' file 找到匹配行后先将第3个域替换后再显示该行（记录）。";}i:2;i:2668;}i:66;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2792;}i:67;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:91:"  awk '{$7 %= 3; print $7}'  file 将第7域被3除，并将余数赋给第7域再打印。";}i:2;i:2792;}i:68;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2792;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:106:"11、awk '/tom/ {wage=$2+$3; printf wage}' file 找到匹配行后为变量wage赋值并打印该变量。";}i:2;i:2889;}i:70;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2995;}i:71;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2995;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"12、awk '/tom/ {count++;} ";}i:2;i:2998;}i:73;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3025;}i:74;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:109:"       END {print "tom was found "count" times"}' file END表示在所有输入行处理完后进行处理。";}i:2;i:3025;}i:75;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3025;}i:76;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"13、awk 'gsub(/\$/,";}i:2;i:3140;}i:77;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3160;}i:78;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3161;}i:79;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:");gsub(/,/,";}i:2;i:3162;}i:80;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3173;}i:81;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3174;}i:82;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"); cost+=$4;";}i:2;i:3175;}i:83;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3187;}i:84;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:180:"       END {print "The total is $" cost>"filename"}'    file gsub函数用空串替换$和,再将结果输出到filename中。
  1 2 3 $1,200.00
  1 2 3 $2,300.00
  1 2 3 $4,000.00";}i:2;i:3187;}i:85;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:268:"  awk '{gsub(/\$/,"");gsub(/,/,"");
  if ($4>1000&&$4<2000) c1+=$4;
  else if ($4>2000&&$4<3000) c2+=$4;
  else if ($4>3000&&$4<4000) c3+=$4;
  else c4+=$4; }
  END {printf  "c1=[%d];c2=[%d];c3=[%d];c4=[%d]\n",c1,c2,c3,c4}"' file
  通过if和else if完成条件语句";}i:2;i:3377;}i:86;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:399:"  awk '{gsub(/\$/,"");gsub(/,/,"");
  if ($4>3000&&$4<4000) exit;
  else c4+=$4; }
  END {printf  "c1=[%d];c2=[%d];c3=[%d];c4=[%d]\n",c1,c2,c3,c4}"' file
  通过exit在某条件时退出，但是仍执行END操作。
  awk '{gsub(/\$/,"");gsub(/,/,"");
  if ($4>3000) next;
  else c4+=$4; }
  END {printf  "c4=[%d]\n",c4}"' file
  通过next在某条件时跳过该行，对下一行执行操作。";}i:2;i:3661;}i:87;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3661;}i:88;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:132:"14、awk '{ print FILENAME,$0 }' file1 file2 file3>fileall 把file1、file2、file3的文件内容全部写到fileall中，格式为";}i:2;i:4084;}i:89;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4216;}i:90;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:35:"  打印文件并前置文件名。";}i:2;i:4216;}i:91;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4216;}i:92;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:"15、awk ' $1!=previous { close(previous); previous=$1 }   ";}i:2;i:4257;}i:93;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4316;}i:94;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:123:"  {print substr($0,index($0," ") +1)>$1}' fileall 把合并后的文件重新分拆为3个文件。并与原文件一致。";}i:2;i:4316;}i:95;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4316;}i:96;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"16、awk 'BEGIN {";}i:2;i:4445;}i:97;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4462;}i:98;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"date";}i:2;i:4463;}i:99;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4467;}i:100;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:115:"|getline d; print d}'         通过管道把date的执行结果送给getline，并赋给变量d，然后打印。 ";}i:2;i:4468;}i:101;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4583;}i:102;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4583;}i:103;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:"17、awk 'BEGIN {system(";}i:2;i:4586;}i:104;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4610;}i:105;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"echo \";}i:2;i:4611;}i:106;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4617;}i:107;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"Input your name:\\c\";}i:2;i:4618;}i:108;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4638;}i:109;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4639;}i:110;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"); getline d;print ";}i:2;i:4640;}i:111;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4659;}i:112;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"\nYour name is";}i:2;i:4660;}i:113;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4674;}i:114;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:",d,";}i:2;i:4675;}i:115;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4678;}i:116;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"\b!\n";}i:2;i:4679;}i:117;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4684;}i:118;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"}'";}i:2;i:4685;}i:119;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4687;}i:120;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:210:"  通过getline命令交互输入name，并显示出来。
  awk 'BEGIN {FS=":"; while(getline< "/etc/passwd" >0) { if($1~"050[0-9]_") print $1}}'
  打印/etc/passwd文件中用户名包含050x_的用户名。";}i:2;i:4687;}i:121;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4687;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:"18、awk '{ i=1;while(i<NF) {print NF,$i;i++}}' file 通过while语句实现循环。";}i:2;i:4906;}i:123;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4991;}i:124;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:287:"  awk '{ for(i=1;i<NF;i++) {print NF,$i}}'   file 通过for语句实现循环。    
  type file|awk -F "/" '
  { for(i=1;i<NF;i++)
  { if(i==NF-1) { printf "%s",$i }
  else { printf "%s/",$i } }}'               显示一个文件的全路径。
  用for和if显示日期
  awk  'BEGIN {";}i:2;i:4991;}i:125;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4991;}i:126;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"for(j=1;j";}i:2;i:5294;}i:127;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"<=";}i:2;i:5303;}i:128;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"12;j++)
{ flag=0;";}i:2;i:5305;}i:129;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5322;}i:130;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:190:"printf "\n%d月份\n",j;
      for(i=1;i<=31;i++)
      {
      if (j==2&&i>28) flag=1;
      if ((j==4||j==6||j==9||j==11)&&i>30) flag=1;
      if (flag==0) {printf "%02d%02d ",j,i}
      }";}i:2;i:5322;}i:131;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5322;}i:132;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"}
}'";}i:2;i:5528;}i:133;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5532;}i:134;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5532;}i:135;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:154:"19、在awk中调用系统变量必须用单引号，如果是双引号，则表示字符串
Flag=abcd
awk '{print '$Flag'}'   结果为abcd
awk '{print  ";}i:2;i:5535;}i:136;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5689;}i:137;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"$Flag";}i:2;i:5690;}i:138;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5695;}i:139;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"}'   结果为$Flag";}i:2;i:5696;}i:140;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5715;}i:141;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5715;}i:142;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:"以上转自chinaunix，以下是自己的总结：";}i:2;i:5717;}i:143;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5768;}i:144;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5768;}i:145;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"求和：";}i:2;i:5770;}i:146;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5780;}i:147;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:108:"  $awk 'BEGIN{total=0}{total+=$4}END{print total}' a.txt   -----对a.txt文件的第四个域进行求和！";}i:2;i:5780;}i:148;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:73:"  $ awk '/^(no|so)/' test-----打印所有以模式no或so开头的行。";}i:2;i:5892;}i:149;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:90:"  $ awk '/^[ns]/{print $1}' test-----如果记录以n或s开头，就打印这个记录。";}i:2;i:5969;}i:150;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:110:"  $ awk '$1 ~/[0-9][0-9]$/(print $1}' test-----如果第一个域以两个数字结束就打印这个记录。";}i:2;i:6063;}i:151;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:114:"  $ awk '$1 == 100 || $2 < 50' test-----如果第一个或等于100或者第二个域小于50，则打印该行。";}i:2;i:6177;}i:152;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:75:"  $ awk '$1 != 10' test-----如果第一个域不等于10就打印该行。";}i:2;i:6295;}i:153;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:119:"  $ awk '/test/{print $1 + 10}' test-----如果记录包含正则表达式test，则第一个域加10并打印出来。";}i:2;i:6374;}i:154;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:163:"  $ awk '{print ($1 > 5 ? "ok "$1: "error"$1)}' test-----如果第一个域大于5则打印问号后面的表达式值，否则打印冒号后面的表达式值。";}i:2;i:6497;}i:155;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:306:"  $ awk '/^root/,/^mysql/' test----打印以正则表达式root开头的记录到以正则表达式mysql开头的记录范围内的所有记录。如果找到一个新的正则表达式root开头的记 录，则继续打印直到下一个以正则表达式mysql开头的记录为止，或到文件末尾。";}i:2;i:6664;}i:156;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:6664;}}