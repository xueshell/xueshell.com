a:261:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:9:"SED简介";i:1;i:2;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:9:"fontcolor";i:1;a:2:{i:0;i:1;i:1;s:7:"#808000";}i:2;i:1;i:3;s:12:"<fc #808000>";}i:2;i:21;}i:5;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:9:"fontcolor";i:1;a:2:{i:0;i:3;i:1;s:3:"sed";}i:2;i:3;i:3;s:3:"sed";}i:2;i:33;}i:6;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:9:"fontcolor";i:1;a:2:{i:0;i:4;i:1;s:4:"#ff0";}i:2;i:4;i:3;s:5:"</fc>";}i:2;i:36;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:714:"是非交互式的编辑器。它不会修改文件，除非使用shell重定向来保存结果。默认情况下，所有的输出行都被打印到屏幕上。
sed编辑器逐行处理文件（或输入），并将结果发送到屏幕。具体过程如下：首先sed把当前正在处理的行保存在一个临时缓存区中（也称为模式空间），然后处理临时缓冲区中的行，完成后把该行发送到屏幕上。sed每处理完一行就将其从临时缓冲区删除，然后将下一行读入，进行处理和显示。处理完输入文件的最后一行后，sed便结束运行。sed把每一行都存在临时缓冲区中，对这个副本进行编辑，所以不会修改原文件。";}i:2;i:41;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:755;}i:9;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:758;}i:10;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"定址";i:1;i:3;i:2;i:758;}i:2;i:758;}i:11;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:758;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:758;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:183:"定址用于决定对哪些行进行编辑。地址的形式可以是数字、正则表达式、或二者的结合。如果没有指定地址，sed将处理输入文件的所有行。";}i:2;i:773;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:956;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:956;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"地址是一个数字，则表示行号；是“$";}i:2;i:959;}i:17;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1008;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:"符号，则表示最后一行。例如： ";}i:2;i:1009;}i:19;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1058;}i:20;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:22:"
sed -n '3p' datafile
";i:1;N;i:2;N;}i:2;i:1058;}i:21;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1058;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"只打印第三行";}i:2;i:1090;}i:23;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1108;}i:24;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1108;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:" 只显示指定行范围的文件内容，例如：";}i:2;i:1113;}i:26;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1171;}i:27;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:82:"
# 只查看文件的第100行到第200行
sed -n '100,200p' mysql_slow_query.log
";i:1;N;i:2;N;}i:2;i:1171;}i:28;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1171;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:189:"地址是逗号分隔的，那么需要处理的地址是这两行之间的范围（包括这两行在内）。范围可以用数字、正则表达式、或二者的组合表示。例如：";}i:2;i:1265;}i:30;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1460;}i:31;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:199:"
sed '2,5d' datafile
#删除第二到第五行
sed '/My/,/You/d' datafile
#删除包含"My"的行到包含"You"的行之间的行
sed '/My/,10d' datafile
#删除包含"My"的行到第十行的内容
";i:1;N;i:2;N;}i:2;i:1460;}i:32;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1674;}i:33;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"3.命令与选项";i:1;i:3;i:2;i:1674;}i:2;i:1674;}i:34;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1674;}i:35;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1674;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:"sed命令告诉sed如何处理由地址指定的各输入行，如果没有指定地址则处理所有的输入行。";}i:2;i:1701;}i:37;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1818;}i:38;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1823;}i:39;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"3.1 sed命令";i:1;i:4;i:2;i:1823;}i:2;i:1823;}i:40;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:1823;}i:41;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1823;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" 命令 	 功能
 a\ 	";}i:2;i:1844;}i:43;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1866;}i:44;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1866;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:213:" 在当前行后添加一行或多行。多行时除最后一行外，每行末尾需用“\”续行
 c\ 	 用此符号后的新文本替换当前行中的文本。多行时除最后一行外，每行末尾需用";}i:2;i:1868;}i:46;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2081;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"\";}i:2;i:2082;}i:48;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2083;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:94:"续行
 i\ 	 在当前行之前插入文本。多行时除最后一行外，每行末尾需用";}i:2;i:2084;}i:50;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2178;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"\";}i:2;i:2179;}i:52;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2180;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:621:"续行
 d 	 删除行
 h 	 把模式空间里的内容复制到暂存缓冲区
 H 	 把模式空间里的内容追加到暂存缓冲区
 g 	 把暂存缓冲区里的内容复制到模式空间，覆盖原有的内容
 G 	 把暂存缓冲区的内容追加到模式空间里，追加在原有内容的后面
 l 	 列出非打印字符
 p 	 打印行
 n 	 读入下一输入行，并从下一条命令而不是第一条命令开始对其的处理
 q 	 结束或退出sed
 r 	 从文件中读取输入行
 ! 	 对所选行以外的所有行应用命令
 s 	 用一个字符串替换另一个
 g 	 在行内进行全局替换";}i:2;i:2181;}i:54;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2802;}i:55;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2802;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:162:" w 	 将所选的行写入文件
 x 	 交换暂存缓冲区与模式空间的内容
 y 	 将字符替换为另一字符（不能对正则表达式使用y命令）";}i:2;i:2807;}i:57;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2969;}i:58;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2974;}i:59;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"3.2 sed选项";i:1;i:4;i:2;i:2974;}i:2;i:2974;}i:60;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:2974;}i:61;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2974;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:151:" 选项 	 功能
 -e 	 进行多项编辑，即对输入行应用多条sed命令时使用
 -n 	 取消默认的输出
 -f 	 指定sed脚本的文件名";}i:2;i:2994;}i:63;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3145;}i:64;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3150;}i:65;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"4.退出状态";i:1;i:3;i:2;i:3150;}i:2;i:3150;}i:66;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3150;}i:67;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3150;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:156:"sed不向grep一样，不管是否找到指定的模式，它的退出状态都是0。只有当命令存在语法错误时，sed的退出状态才不是0。";}i:2;i:3173;}i:69;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3330;}i:70;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3330;}i:71;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"5.正则表达式元字符";i:1;i:3;i:2;i:3330;}i:2;i:3330;}i:72;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3330;}i:73;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3330;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:140:" 与grep一样，sed也支持特殊元字符，来进行模式查找、替换。不同的是，sed使用的正则表达式是括在斜杠线";}i:2;i:3365;}i:75;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3505;}i:76;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"/";}i:2;i:3506;}i:77;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3507;}i:78;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:55:"之间的模式。
如果要把正则表达式分隔符";}i:2;i:3508;}i:79;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3563;}i:80;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"/";}i:2;i:3564;}i:81;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3565;}i:82;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:179:"改为另一个字符，比如o，只要在这个字符前加一个反斜线，在字符后跟上正则表达式，再跟上这个字符即可。例如：sed -n '\o^Myop' datafile";}i:2;i:3566;}i:83;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3745;}i:84;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3745;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:989:" 元字符 	 功能 	 示例
 ^ 	 行首定位符 	 /^my/  匹配所有以my开头的行
 $ 	 行尾定位符 	 /my$/  匹配所有以my结尾的行
 . 	 匹配除换行符以外的单个字符 	 /m..y/  匹配包含字母m，后跟两个任意字符，再跟字母y的行
 * 	 匹配零个或多个前导字符 	 /my*/  匹配包含字母m,后跟零个或多个y字母的行
 [] 	 匹配指定字符组内的任一字符 	 /[Mm]y/  匹配包含My或my的行
 [^] 	 匹配不在指定字符组内的任一字符 	 /[^Mm]y/  匹配包含y，但y之前的那个字符不是M或m的行
 \(..\) 	 保存已匹配的字符 	 1,20s/\(you\)self/\1r/  标记元字符之间的模式，并将其保存为标签1，之后可以使用\1来引用它。最多可以定义9个标签，从左边开始编号，最左边的是第一个。此例中，对第1到第20行进行处理，you被保存为标签1，如果发现youself，则替换为your。
 & 	 保存查找串以便在替换串中引用 	 s/my/";}i:2;i:3748;}i:86;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4737;}i:87;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"&";}i:2;i:4739;}i:88;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:4740;}i:89;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:"/  符号&代表查找串。my将被替换为";}i:2;i:4742;}i:90;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4787;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"my";}i:2;i:4789;}i:92;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:4791;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:368:"
 \< 	 词首定位符 	 /\<my/  匹配包含以my开头的单词的行
 \> 	 词尾定位符 	 /my\>/  匹配包含以my结尾的单词的行
 x\{m\} 	 连续m个x 	 /9\{5\}/ 匹配包含连续5个9的行
 x\{m,\} 	 至少m个x 	 /9\{5,\}/  匹配包含至少连续5个9的行
 x\{m,n\} 	 至少m个，但不超过n个x 	 /9\{5,7\}/  匹配包含连续5到7个9的行";}i:2;i:4793;}i:94;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5161;}i:95;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5164;}i:96;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"6.范例";i:1;i:3;i:2;i:5164;}i:2;i:5164;}i:97;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5164;}i:98;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5164;}i:99;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:220:"6.1 p命令
命令p用于显示模式空间的内容。默认情况下，sed把输入行打印在屏幕上，选项-n用于取消默认的打印操作。当选项-n和命令p同时出现时,sed可打印选定的内容。";}i:2;i:5183;}i:100;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5403;}i:101;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5403;}i:102;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:160:"sed '/my/p' datafile
#默认情况下，sed把所有输入行都打印在标准输出上。如果某行匹配模式my，p命令将把该行另外打印一遍。";}i:2;i:5407;}i:103;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5567;}i:104;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5567;}i:105;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:105:"sed -n '/my/p' datafile
#选项-n取消sed默认的打印，p命令把匹配模式my的行打印一遍。";}i:2;i:5570;}i:106;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5675;}i:107;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5675;}i:108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"6.2 d命令";}i:2;i:5680;}i:109;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5691;}i:110;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5691;}i:111;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:263:"命令d用于删除输入行。sed先将输入行从文件复制到模式空间里，然后对该行执行sed命令，最后将模式空间里的内容显示在屏幕上。如果发出的是命令d，当前模式空间里的输入行会被删除，不被显示。";}i:2;i:5693;}i:112;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5956;}i:113;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5956;}i:114;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:"sed '$d' datafile
#删除最后一行，其余的都被显示";}i:2;i:5958;}i:115;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6019;}i:116;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6019;}i:117;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:"sed '/my/d' datafile
#删除包含my的行，其余的都被显示";}i:2;i:6021;}i:118;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6087;}i:119;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6087;}i:120;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"6.3 s命令";}i:2;i:6092;}i:121;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6103;}i:122;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6103;}i:123;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:153:"sed 's/^My/You/g' datafile
#命令末端的g表示在行内进行全局替换，也就是说如果某行出现多个My，所有的My都被替换为You。";}i:2;i:6105;}i:124;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6258;}i:125;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6258;}i:126;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:160:"sed -n '1,20s/My$/You/gp' datafile
#取消默认输出，处理1到20行里匹配以My结尾的行，把行内所有的My替换为You，并打印到屏幕上。";}i:2;i:6260;}i:127;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6420;}i:128;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6420;}i:129;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:258:"sed 's#My#Your#g' datafile
#紧跟在s命令后的字符就是查找串和替换串之间的分隔符。分隔符默认为正斜杠，但可以改变。无论什么字符（换行符、反斜线除外），只要紧跟s命令，就成了新的串分隔符。";}i:2;i:6425;}i:130;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6683;}i:131;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6683;}i:132;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"6.4 e选项";}i:2;i:6688;}i:133;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6699;}i:134;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6699;}i:135;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:161:"-e是编辑命令，用于sed执行多个编辑任务的情况下。在下一行开始编辑前，所有的编辑动作将应用到模式缓冲区中的行上。";}i:2;i:6701;}i:136;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6862;}i:137;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6862;}i:138;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"sed -e '1,10d' -e 's/My/Your/g' datafile";}i:2;i:6864;}i:139;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6904;}i:140;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6904;}i:141;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:267:"#选项-e用于进行多重编辑。第一重编辑删除第1-3行。第二重编辑将出现的所有My替换为Your。因为是逐行进行这两项编辑（即这两个命令都在模式空间的当前行上执行），所以编辑命令的顺序会影响结果。";}i:2;i:6906;}i:142;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7173;}i:143;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7173;}i:144;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"6.5 r命令";}i:2;i:7178;}i:145;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7189;}i:146;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7189;}i:147;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:"r命令是读命令。sed使用该命令将一个文本文件中的内容加到当前文件的特定位置上。";}i:2;i:7191;}i:148;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7303;}i:149;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7303;}i:150;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:244:"sed '/My/r introduce.txt' datafile
#如果在文件datafile的某一行匹配到模式My，就在该行后读入文件introduce.txt的内容。如果出现My的行不止一行，则在出现My的各行后都读入introduce.txt文件的内容。";}i:2;i:7305;}i:151;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7549;}i:152;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7549;}i:153;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"6.6 w命令";}i:2;i:7552;}i:154;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7563;}i:155;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7563;}i:156;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"sed -n '/hrwang/w me.txt' datafile";}i:2;i:7565;}i:157;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7599;}i:158;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7599;}i:159;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"6.7 a\ 命令";}i:2;i:7604;}i:160;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7617;}i:161;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7617;}i:162;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:330:"a\ 命令是追加命令，追加将添加新文本到文件中当前行（即读入模式缓冲区中的行）的后面。所追加的文本行位于sed命令的下方另起一行。如果要追加的内容超过一行，则每一行都必须以反斜线结束，最后一行除外。最后一行将以引号和文件名结束。";}i:2;i:7619;}i:163;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7949;}i:164;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7949;}i:165;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"sed '/^hrwang/a\";}i:2;i:7951;}i:166;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7967;}i:167;a:3:{i:0;s:10:"quote_open";i:1;a:0:{}i:2;i:7967;}i:168;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"hrwang and mjfan are husband\";}i:2;i:7969;}i:169;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:7998;}i:170;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"and wife' datafile";}i:2;i:8000;}i:171;a:3:{i:0;s:11:"quote_close";i:1;a:0:{}i:2;i:8018;}i:172;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8018;}i:173;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:124:"#如果在datafile文件中发现匹配以hrwang开头的行，则在该行下面追加hrwang and mjfan are husband and wife";}i:2;i:8019;}i:174;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8143;}i:175;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8143;}i:176;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"6.8 i\ 命令";}i:2;i:8148;}i:177;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8161;}i:178;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8161;}i:179;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:"i\ 命令是在当前行的前面插入新的文本。";}i:2;i:8163;}i:180;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8217;}i:181;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8217;}i:182;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"6.9 c\ 命令";}i:2;i:8222;}i:183;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8235;}i:184;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8235;}i:185;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:"sed使用该命令将已有文本修改成新的文本。";}i:2;i:8237;}i:186;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8294;}i:187;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8294;}i:188;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"6.10 n命令";}i:2;i:8299;}i:189;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8311;}i:190;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8311;}i:191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:156:"sed使用该命令获取输入文件的下一行，并将其读入到模式缓冲区中，任何sed命令都将应用到匹配行紧接着的下一行上。";}i:2;i:8313;}i:192;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8469;}i:193;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8469;}i:194;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:249:"sed '/hrwang/{n;s/My/Your/;}' datafile
注：如果需要使用多条命令，或者需要在某个地址范围内嵌套地址，就必须用花括号将命令括起来，每行只写一条命令，或这用分号分割同一行中的多条命令。";}i:2;i:8471;}i:195;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8720;}i:196;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8720;}i:197;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:215:"6.11 y命令
该命令与UNIX/Linux中的tr命令类似，字符按照一对一的方式从左到右进行转换。例如，y/abc/ABC/将把所有小写的a转换成A，小写的b转换成B，小写的c转换成C。";}i:2;i:8723;}i:198;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8938;}i:199;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8938;}i:200;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:254:"sed '1,20y/hrwang12/HRWANG^$/' datafile
#将1到20行内，所有的小写hrwang转换成大写，将1转换成^,将2转换成$。
#正则表达式元字符对y命令不起作用。与s命令的分隔符一样，斜线可以被替换成其它的字符。";}i:2;i:8942;}i:201;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9196;}i:202;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9196;}i:203;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"6.12 q命令";}i:2;i:9201;}i:204;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9213;}i:205;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9213;}i:206;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:"q命令将导致sed程序退出，不再进行其它的处理。";}i:2;i:9215;}i:207;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9279;}i:208;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9279;}i:209;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"sed '/hrwang/{s/hrwang/HRWANG/;q;}' datafile";}i:2;i:9281;}i:210;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9325;}i:211;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9325;}i:212;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"6.13 h命令和g命令";}i:2;i:9330;}i:213;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9352;}i:214;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9352;}i:215;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"#cat datafile";}i:2;i:9354;}i:216;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9367;}i:217;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9367;}i:218;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"My name is hrwang.";}i:2;i:9369;}i:219;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9387;}i:220;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9387;}i:221;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"Your name is mjfan.";}i:2;i:9389;}i:222;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9408;}i:223;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9408;}i:224;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:"hrwang is mjfan's husband.";}i:2;i:9410;}i:225;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9436;}i:226;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9436;}i:227;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"mjfan is hrwang's wife.";}i:2;i:9438;}i:228;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9461;}i:229;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9461;}i:230;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"sed -e '/hrwang/h' -e '$G' datafile";}i:2;i:9467;}i:231;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9502;}i:232;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9502;}i:233;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"sed -e '/hrwang/H' -e '$G' datafile";}i:2;i:9504;}i:234;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9539;}i:235;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9539;}i:236;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:232:"#通过上面两条命令，你会发现h会把原来暂存缓冲区的内容清除，只保存最近一次执行h时保存进去的模式空间的内容。而H命令则把每次匹配hrwnag的行都追加保存在暂存缓冲区。";}i:2;i:9541;}i:237;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9773;}i:238;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9773;}i:239;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"sed -e '/hrwang/H' -e '$g' datafile";}i:2;i:9775;}i:240;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9810;}i:241;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9810;}i:242;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"sed -e '/hrwang/H' -e '$G' datafile";}i:2;i:9812;}i:243;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9847;}i:244;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9847;}i:245;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:264:"#通过上面两条命令，你会发现g把暂存缓冲区中的内容替换掉了模式空间中当前行的内容，此处即替换了最后一行。而G命令则把暂存缓冲区的内容追加到了模式空间的当前行后。此处即追加到了末尾。";}i:2;i:9849;}i:246;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10113;}i:247;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10113;}i:248;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"7. sed脚本";}i:2;i:10121;}i:249;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10133;}i:250;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10133;}i:251;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:518:"sed脚本就是写在文件中的一列sed命令。脚本中，要求命令的末尾不能有任何多余的空格或文本。如果在一行中有多个命令，要用分号分隔。执行脚本时，sed先将输入文件中第一行复制到模式缓冲区，然后对其执行脚本中所有的命令。每一行处理完毕后，sed再复制文件中下一行到模式缓冲区，对其执行脚本中所有命令。使用sed脚本时，不再用引号来确保sed命令不被shell解释。例如sed脚本script：";}i:2;i:10135;}i:252;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10653;}i:253;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10653;}i:254;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:123:"#handle datafile
3i\
~~~~~~~~~~~~~~~~~~~~~
3,$s/\(hrwang\) is \(mjfan\)/\2 is \1/
$a\
We will love eachother forever！！ ";}i:2;i:10655;}i:255;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10778;}i:256;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10778;}i:257;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:198:"#sed -f script datafile
My name is hrwang
Your name is mjfan
~~~~~~~~~~~~~~~~~~~~~
mjfan is hrwang's husband.          ＃啦啦～～～
mjfan is hrwang's wife.
We will love eachother forever！！";}i:2;i:10785;}i:258;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10983;}i:259;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:10985;}i:260;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:10985;}}