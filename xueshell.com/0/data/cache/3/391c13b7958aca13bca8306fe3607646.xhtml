
<p>
变量说明:
</p>

<p>
$$
Shell本身的PID（ProcessID）
</p>

<p>
$!
Shell最后运行的后台Process的PID
</p>

<p>
$?
最后运行的命令的结束代码（返回值）
</p>

<p>
$-
使用Set命令设定的Flag一览
</p>

<p>
$*
所有参数列表。如”$*”用「”」括起来的情况、以”$1 $2 … $n”的形式输出所有参数。
</p>

<p>
$@
所有参数列表。如”$@“用「”」括起来的情况、以”$1” “$2” … “$n” 的形式输出所有参数。
</p>

<p>
$#
添加到Shell的参数个数
</p>

<p>
$0
Shell本身的文件名
</p>

<p>
$1～$n
添加到Shell的各参数值。$1是第1参数、$2是第2参数…。
我们先写一个简单的脚本，执行以后再解释各个变量的意义
</p>

<p>
# touch variable
# vi variable
</p>

<p>
脚本内容如下：
</p>
<pre class="code">#!/bin/sh
echo &quot;number:$#&quot;
echo &quot;scname:$0&quot;
echo &quot;first :$1&quot;
echo &quot;second:$2&quot;
echo &quot;argume:$@&quot;</pre>

<p>
保存退出
赋予脚本执行权限
</p>

<p>
# chmod +x variable
</p>

<p>
执行脚本
</p>
<pre class="code"># ./variable aa bb
number:2
scname:./variable
first: aa
second:bb
argume:aa bb</pre>

<p>
通过显示结果可以看到：
</p>

<p>
$# 是传给脚本的参数个数
</p>

<p>
$0 是脚本本身的名字
</p>

<p>
$1是传递给该shell脚本的第一个参数
</p>

<p>
$2是传递给该shell脚本的第二个参数
</p>

<p>
$@ 是传给脚本的所有参数的列表
</p>
