
<h3 class="sectionedit1" id="git_log_日常用法">git log 日常用法</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> 只是显示sha版本号和commit log</div>
</li>
</ul>
<pre class="code">root@blog-test002 gitant.com]#  git log --oneline --graph
* 21b5cb7  backup
* 4e26248  backup
* bb993a7  backup
* 7162f48  new data
* 9aec2d2  today
* 20bbe70  back</pre>
<ul>
<li class="level1"><div class="li"> 只显示近两次的更新</div>
</li>
</ul>

<p>
我们常用 -p 选项展开显示每次提交的内容差异，用 -2 则仅显示最近的两次更新：
</p>
<pre class="code">$ git log -p -2</pre>
<ul>
<li class="level1"><div class="li"> git 一行查看日志</div>
</li>
</ul>
<pre class="code">$ git log --pretty=oneline</pre>
<hr />

</div>
<!-- EDIT1 SECTION "git log 日常用法" [2-499] -->
<h3 class="sectionedit2" id="git_log_常用参数">git log 常用参数</h3>
<div class="level3">
<pre class="code">$ git log v2.5..        # commits since (not reachable from) v2.5
$ git log test..master  # commits reachable from master but not test
$ git log master..test  # commits reachable from test but not master
$ git log master...test # commits reachable from either test or
                        #    master, but not both
$ git log --since=&quot;2 weeks ago&quot; # commits from the last 2 weeks
$ git log Makefile      # commits that modify Makefile
$ git log fs/           # commits that modify any file under fs/
$ git log -S&#039;foo()&#039;     # commits that add or remove any file data
                        # matching the string &#039;foo()&#039;
$ git log --no-merges   # dont show merge commits</pre>
<hr />

</div>
<!-- EDIT2 SECTION "git log 常用参数" [500-1223] -->
<h3 class="sectionedit3" id="git_log_很好的参数组合">git log 很好的参数组合</h3>
<div class="level3">

<p>
非常好的例子，可以作为别名存入配置文件。
</p>
<pre class="code">git log --graph --pretty=format:&#039;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#039; </pre>

<p>
结果如下:
</p>
<pre class="code">[root@blog-test002 gitant.com]# git log --graph --pretty=format:&#039;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#039; 
* 21b5cb7 - (HEAD, origin/master, origin/HEAD, github/master, master)  backup (33 minutes ago) &lt;Your Name&gt;
* 4e26248 -  backup (4 hours ago) &lt;Your Name&gt;
* bb993a7 -  backup (2 days ago) &lt;Your Name&gt;
* 7162f48 -  new data (3 days ago) &lt;Your Name&gt;
* 9aec2d2 -  today (2 weeks ago) &lt;Your Name&gt;
* 20bbe70 -  back (2 weeks ago) &lt;Your Name&gt;
* 87591e4 -  back (2 weeks ago) &lt;Your Name&gt;
* f9062b3 -  git category (3 weeks ago) &lt;Your Name&gt;
* b196945 -  modify permission (4 weeks ago) &lt;Your Name&gt;</pre>
<hr />

</div>
<!-- EDIT3 SECTION "git log 很好的参数组合" [1224-2117] -->
<h3 class="sectionedit4" id="git_如何查看某一版本文件的内容">git 如何查看某一版本文件的内容？</h3>
<div class="level3">

<p>
翻看某一文件的历史，如何查看旧版本文件的内容呢？
</p>
<ul>
<li class="level1"><div class="li"> 用 git show 查看某版本文件的内容</div>
</li>
</ul>

<p>
 首先找到版本号；
</p>
<pre class="code bash"><span class="kw2">git log</span> <span class="re5">-3</span>   file_name   <span class="co0"># 选择文件后3次提交的历史版本记录</span></pre>

<p>
找到file_name后3次提交的历史记录，确定要看第三次的提交时，file_name的文件内容；
</p>
<pre class="code bash"><span class="kw2">git show</span> cb712ee517b3e9a702:path<span class="sy0">/</span>to<span class="sy0">/</span><span class="kw2">file</span>  <span class="co0"># 版本号：目录下文件</span></pre>

<p>
用git show  哈希值:文件目录/文件的模式查看内容， 文件是不包括仓库名的绝对目录。
</p>
<ul>
<li class="level1"><div class="li"> 用 git cat-file 查看某版本的文件内容</div>
</li>
</ul>
<pre class="code bash"><span class="kw2">git log</span> del_sina_svn_usr.sh  <span class="co0"># 查看del_sina_svn_usr.sh文件的日志，找到老版本号 cb712ee517b3e9a702a23b8</span></pre>

<p>
读出老版本的提交内容
</p>
<pre class="code">	
# git cat-file -p cb712ee517b3e9a702a23b8
tree 8dbd87bcada6f5ac8ece519a098be9d076889e6e
parent a28eb2ad366bb42187d972fb6b9fcf99b78a447c
author Your Name &lt;you@example.com&gt; 1370417409 +0800
committer Your Name &lt;you@example.com&gt; 1370417409 +0800</pre>

<p>
找到文件del_sina_svn_usr.sh 实体的哈希值
</p>
<pre class="code bash"><span class="kw2">git ls-tree</span> 8dbd87bcada6f5ac8ece519a
<span class="nu0">100644</span> blob dfba7afb79b6c5fb86c161e65b5afaa9d02fdb6e    del_sina_svn_usr.sh</pre>

<p>
查看老版本文件的内容
</p>
<pre class="code">	
git cat-file -p dfba7afb79b6c5fb86c161e65b5afaa9d02fdb6</pre>
<hr />

</div>
<!-- EDIT4 SECTION "git 如何查看某一版本文件的内容？" [2118-3528] -->
<h3 class="sectionedit5" id="git_log_查看每次提交变更的文件清单">git log 查看每次提交变更的文件清单？</h3>
<div class="level3">

<p>
查看文件变更清单
</p>
<pre class="code">git log -p shows the complete patch for each commit it lists,
while these options summarize the changes in different ways:
$ git log --name-status
$ git log --stat</pre>
<hr />

</div>
<!-- EDIT5 SECTION "git log 查看每次提交变更的文件清单？" [3529-3797] -->
<h3 class="sectionedit6" id="git_log_图示版本演进">git log 图示版本演进</h3>
<div class="level3">
<pre class="code">git log --graph --pretty=oneline --abbrev-commit</pre>

</div>
<!-- EDIT6 SECTION "git log 图示版本演进" [3798-] -->